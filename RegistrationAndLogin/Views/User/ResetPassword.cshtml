@model RegistrationAndLogin.Models.ResetPasswordModel
@{
    ViewBag.Title = "Reset Password";
}
@if (!Request.IsAuthenticated)
{

    {
        Layout = null;
    }
@*<h2>Reset Password</h2>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()    
    <div class="form-horizontal">
        <h4>Reset Password</h4>
        <hr />
        <div class="text-danger">
            @ViewBag.Message
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.HiddenFor(a=>a.ResetCode)
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@


<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Al Rehman Laboratory</title>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
    <link href="~/Content/style1.css" rel="stylesheet" />

</head>
<body>
    <div class="wrapper">
        <div class="login">
            <p class="title">Reset Password</p>
           @using (Html.BeginForm())
           {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
              
                <div class="text-danger" style="color:forestgreen;font-size:11.65px;">
                    @ViewBag.Message @*<p style="height:0px;"> &nbsp;</p>*@
            </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.NewPassword, "New Password", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, "Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.HiddenFor(a => a.ResetCode)
                </div>
                @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>*@
            </div>

        <div>
            @Html.ActionLink("Back To Login", "Login")
        </div>

                <button>
                    <i class="spinner"></i>
                    <span class="state">Submit</span>
                </button>

           }



        </div>
        <footer class="footer"><a target="_blank" href="alrahman.swaatech.com">Al Rehman Pharmacy</a></footer>
    </div>


    @*<script>
            var working = false;
            $('.login').on('submit', function (e) {
                e.preventDefault();
                if (working) return;
                working = true;
                var $this = $(this),
                  $state = $this.find('button > .state');
                $this.addClass('loading');
                $state.html('Authenticating');
                setTimeout(function () {
                    $this.addClass('ok');
                    $state.html('Welcome back!');
                    setTimeout(function () {
                        $state.html('Log in');
                        $this.removeClass('ok loading');
                        working = false;
                    }, 4222);
                }, 3222);
            });

        </script>*@
</body>
</html>

}

else
{

    <div class="main-content" id="content">
        <p class="title">Reset Password</p>
        @using (Html.BeginForm())
        {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">

            <div class="text-danger" style="color:forestgreen;font-size:11.65px;">
                @ViewBag.Message @*<p style="height:0px;"> &nbsp;</p>*@
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.NewPassword, "New Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, "Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.HiddenFor(a => a.ResetCode)
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div> }
        </div>

        }







        @section Scripts{
            <script src="~/Scripts/jquery.validate.min.js"></script>
            <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        }
